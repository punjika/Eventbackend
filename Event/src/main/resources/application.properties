# spring.application.name=demo
# # MySQL Database Configuration
# spring.datasource.url=jdbc:mysql://localhost:3306/testdb?createDatabaseIfNotExist=true
# spring.datasource.username=root
# spring.datasource.password=Mysql@123
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# # JPA Configuration
# # spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=true

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
spring.datasource.username=postgres
spring.datasource.password=Mysql@123

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
server.port=8080

# Deployment notes:
# - For production on Render, set environment variables on the Render service:
#   SPRING_DATASOURCE_URL (jdbc:postgresql://host:5432/dbname)
#   SPRING_DATASOURCE_USERNAME
#   SPRING_DATASOURCE_PASSWORD
#   SPRING_PROFILES_ACTIVE=prod
# - I added `application-prod.properties` which uses these env variables and uses
#   `server.port=${PORT:8080}` so Render's assigned port is respected.






# Enable logging for your package
logging.level.com.demo=DEBUG
logging.file.name=logs/event-schedule.log
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n



